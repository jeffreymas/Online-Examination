// <auto-generated />
using ExamOnline.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ExamOnline.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20200923145858_initTable")]
    partial class initTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ExamOnline.Models.Answer", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Answers");

                    b.Property<string>("QuestionId");

                    b.Property<bool>("Status");

                    b.Property<bool>("isDelete");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("tb_t_answer");
                });

            modelBuilder.Entity("ExamOnline.Models.Question", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Key");

                    b.Property<string>("OptionA");

                    b.Property<string>("OptionB");

                    b.Property<string>("OptionC");

                    b.Property<string>("OptionD");

                    b.Property<string>("OptionE");

                    b.Property<string>("Questions");

                    b.Property<bool>("isDelete");

                    b.HasKey("Id");

                    b.ToTable("tb_m_question");
                });

            modelBuilder.Entity("ExamOnline.Models.Answer", b =>
                {
                    b.HasOne("ExamOnline.Models.Question", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionId");
                });
#pragma warning restore 612, 618
        }
    }
}
